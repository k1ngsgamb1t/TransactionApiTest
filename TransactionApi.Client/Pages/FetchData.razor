@page "/fetchdata"
@using TransactionApi.Shared
@using TransactionApi.Shared.Dto
@inject HttpClient Http

<h1>Available transactions</h1>

<input type="text" onchange="@CurrencyCode">Type currency code:<input/>
<DateRangePicker @bind-StartDate="StartDate" @bind-EndDate="EndDate" />
<select bind="@SelectedStatus">
    <option>A</option>
    <option>R</option>
    <option>D</option>
</select>
<button onclick="OnQueryExecuting">Run Query</button>

@if (_transactions != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Transaction id</th>
                <th>Payment</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _transactions)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Payment</td>
                    <td>@item.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private TransactionDto[] _transactions;
    string SelectedStatus = string.Empty;
    string CurrencyCode = string.Empty;
    DateTimeOffset? StartDate { get; set; } = DateTime.Today.AddMonths(-1);
    DateTimeOffset? EndDate { get; set; } = DateTime.Today.AddDays(1).AddTicks(-1);

    public async Task OnQueryExecuting()
    {
        var query = new TransactionQuery()
        {
            CurrencyCode = CurrencyCode,
            StartTime = StartDate.Value.Date,
            EndTime = EndDate.Value.Date,
            Status = SelectedStatus
        };
        _transactions = await Http.GetJsonAsync<TransactionDto[]>("api/transactions" + query.ToQueryString());
        StateHasChanged();
    }

}
